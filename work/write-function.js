/**
 * 1. 인사말 메시지
 *  사용자로부터 이름을 입력받아 인사말을 출력하는 함수를 작성합니다.
 * ------------------------------------------------------------------
 *  함수이름 : greetUser
 *  매개변수 : username
 *  기능 : 인사말 메시지 "안녕하세요! {이름}님. 좋은 하루되세요!"를 문자열로 반환
 *  반환값 타입 : String
 *  비고 : 함수 선언으로 작성
 * ------------------------------------------------------------------
 * !! 풀이 과정
 * = 인수에 이름을 받으면, 함수에서 텍스트와 매개변수를 조합해 반환한다.
 * ------------------------------------------------------------------
 */

function greetUser(username) {
  return '안녕하세요! ' + username + '님. ' + '좋은 하루되세요!';
}

console.log(greetUser('조장원'));

/**
 * 2. 원가 계산
 *  판매가를 입력 받아 원가를 계산하는 함수를 작성합니다.
 *  | 판매가(세후 금액)에서 원가(세전 금액)를 계산하려면 판매가를 "100% + 세금 비율"로 나눠야 합니다.
 *  | 해당 품목의 세금 비율은 3.3%입니다.
 * ------------------------------------------------------------------
 *  함수이름 : calculateOriginalPrice
 *  매개변수 : priceWithTax
 *  기능 : 판매 가격에서 세금을 제외한 원가 반환
 *  반환값 타입 : Number
 *  비고 : 함수 표현식으로 작성
 * ------------------------------------------------------------------
 * !! 풀이과정
 * = (1 + 0.033) 수식을 사용하기 위해 3.3%를 TAX_RATE 상수에 0.033을 할당하고
 *   calculateOriginalPrice 함수내에서 priceWithTax 매개변수가 인수 값을 받으면
 *   priceWithTax / (1 + TAX_RATE) 의 수식을 반환하도록 설계했다.
 * ------------------------------------------------------------------
 */
const TAX_RATE = 0.033;

let calculateOriginalPrice = function(priceWithTax) {
  return priceWithTax / (1 + TAX_RATE);
}

console.log(calculateOriginalPrice(10330));

/**
 * 3. 주류 판매 가능 여부
 *  신분증의 나이를 확인해 주류 구매 가능 여부를 반환하는 함수를 작성합니다.
 *  | 19세 이상 주류 구매가 가능합니다.
 * ------------------------------------------------------------------
 *  함수이름 : canSellAlcohol
 *  매개변수 : registrationCard
 *  기능 : 신분증의 나이를 확인해 주류 판매 가능 여부를 불리언 타입으로 반환
 *  반환값 타입 : Boolean
 *  비고 : 화살표 함수 표현식으로 작성
 * ------------------------------------------------------------------
 *  객체 이름 : registrationCard
 *  속성 : 이름(name)
 *  속성 : 나이(age)
 *  속성 : 성별(gender)
 * ------------------------------------------------------------------
 * !! 풀이과정
 * = 결과는 뽑았지만 아직까지 이해가 안가는 부분이 생겼다.
 *   함수의 매개변수 명과 객체 명이 registrationCard 로 동일한데 그렇다면,
 *   함수의 매개변수는 객체가 된것인가? 아니면 이름만 같은 매개변수 그 자체인가?
 *   세상에.. 위에 저런 의문점을 써보면서 깨달았다!! 매개변수명을 다른 명으로 할당했을때 결과가 같았다.
 *   그렇기에 객체 명과 함수의 매개변수 명이 같아도 매개변수의 역할을 한다는 것을 깨달았다. ('블록 스코프'여서 라고 이해해야할까..? 변수는 가까운 영역에서 찾으니..)
 *   많은 생각과 고민을 하면서 이해했을때 정말 재밌다.. 강사님은 이런 부분을 의도하신 걸까.. 무서우신 분이다.
 * ------------------------------------------------------------------
 */

const ADULT_AGE = 19;

const registrationCard = {
  name : '조장원',
  age : 30,
  gender : '남성'
}

let canSellAlcohol = (registrationCard) => registrationCard.age >= ADULT_AGE

console.log(canSellAlcohol(registrationCard));

/**
 * 4. 할인가 계산
 *  판매가와 할인 비율(%)을 입력 받아, 할인가를 반환하는 함수를 작성합니다.
 *  | [예] 판매가가 18,700원이고, 할인율이 20%인 경우
 *  |      계산된 할인가는 14,960원입니다.
 * ------------------------------------------------------------------
 *  함수이름 : getDiscountedPrice
 *  매개변수 : originalPrice, discountPercent
 *  기능 : 판매가에서 할인율을 적용한 할인가를 반환
 *  반환값 타입 : Number
 * ------------------------------------------------------------------
 * !! 풀이과정
 * = 판매가와 할인율을 나눈뒤에 나온 값을 판매가와 빼기 해줬다.
 * ------------------------------------------------------------------
 */

let getDiscountedPrice = (originalPrice, discountPercent) => originalPrice - originalPrice / discountPercent;

console.log(getDiscountedPrice(10000, 10));

/**
 * 5. 등급 판단
 *  점수를 전달받아 점수, 등급과 설명을 포함한 객체를 반환하는 함수를 작성합니다.
 * ------------------------------------------------------------------
 *  점수범위 / 등급(Grade) / 설명
 *  90 ~ 100점 / A / 매우 우수
 *  80 ~ 89점 / B / 우수
 *  70 ~ 79점 / C / 보통
 *  60 ~ 69점 / D / 미달, 통과 기준 근접
 *  0 ~ 59점 / F / 낙제
 * ------------------------------------------------------------------
 * 함수가 반환해야 할 결과 값은 아래 포멧(format)입니다.
 * { score: 87, grade: 'B', description: '우수' }
 * ------------------------------------------------------------------
 * !! 풀이과정
 * = 설계 전에 많은 고민을 했다. 객체를 만들고 모든 경우를 키와 값으로 구성해야하나? 등 여러 방식으로 객체를 만들고 함수를 표현해봤지만
 *   코드를 보면 "뭔가 비효율적인데" 라는 생각이 들었다. 다 지우고 다시 조건을 보고 함수를 만들고 조건만 만들고 return에 포멧을 넣어봤다.
 *   그랬더니.. 깨달았다. 등급과 설명의 변수를 선언만 하고 조건에 맞는 값을 할당해주고 반환할때 객체를 생성하면 되는 것이였다..!!
 *   그렇게 만들어진 객체에 변수로 할당한 값만 불러오면 되는 것이였다. 이게 좋은 코드(?)인지 판단이 잘 안서지만 즐거운 고민이였다.
 * ------------------------------------------------------------------
 */

let scoreResult = (score) => {
  let grade;
  let description;

  if(90 <= score) {
    grade = 'A';
    description = '매우 우수';
  }else if(80 <= score) {
    grade = 'B';
    description = '우수';
  }else if(70 <= score) {
    grade = 'C';
    description = '보통';
  }else if(60 <= score) {
    grade = 'D';
    description = '미달, 통과 기준 근접';
  }else {
    grade = 'F';
    description = '낙제';
  }

  return {'score': score, 'grade': grade, 'description': description}
}


console.log(scoreResult(80));